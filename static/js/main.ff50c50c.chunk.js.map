{"version":3,"sources":["Api/gecko.ts","Utils.ts","Context/GlobalContextProvider.tsx","Components/Navbar/Navbar.tsx","Components/MetaMaskButton.tsx","Context/TotalAssetValueContext.tsx","Api/Imx.ts","Api/link.ts","Pages/OrdersPage.tsx","Pages/InventoryPage.tsx","App.tsx","index.tsx"],"names":["fetchCoinPrice","coinID","a","fetch","then","x","json","usd","fetchEthPrice","fetchGodsPrice","round","n","d","Math","pow","Number","EPSILON","useAsyncEffect","fn","arr","useEffect","sleep","ms","Promise","resolve","setTimeout","undercut","currency","amount","SetAddressContext","React","createContext","AddressContext","GeckoContext","ethPrice","godsPrice","useEthPrice","useContext","useGodsPrice","useAddress","GlobalContextProvider","children","useState","setEthPrice","setGodsPrice","addr","setAddr","gecko","Provider","value","Navbar","props","currentPage","setCurrentPage","console","log","className","items","map","item","i","onClick","label","page","ButtonMetaMask","useMetaMask","status","connect","account","setAddress","TotalAssetValueContext","TotalAssetValueAddContext","TotalAssetValueProvider","totalValue","totalValueSet","v","old","fetchBalances","res","fetchAssets","fetchAssetsByName","name","fetchOrdersByNameEth","quality","data","encodeURIComponent","fetchOrdersByNameGods","fetchOrdersByName","getPriceByNameGods","buy","result","quantity","decimals","getPriceByNameEth","waitOrder","address","tokenName","orderID","count","some","no","orders","sell_orders","so","order_id","sell","token","price","currencyAddress","link","Link","toString","tokenId","token_id","tokenAddress","token_address","num","sell2","cancel","orderId","sellEth","sellGods","TokenListDisplay","p","ImageDisplay","src","url","OrderDisplay","sellOrder","buy_quantity","buy_decimals","setAmount","contract_address","setPrice","selling","setSelling","displaying","setDisplaying","imx","metadata","order","currentAmount","undercutPrice","user","newPrice","image","OrdersPage","setOrders","responds","assetsWithSellOrders","filter","length","t","ItemDisplay","tokens","setTokens","setAmountEth","setAmountGods","ethQuantity","setEthQuantity","godsQuantity","setGodsQuantity","ethRes","godsRes","usePrice","priceOfEth","priceOfGods","find","undefined","currentAmountEth","newAmountEth","sellOrderID","waitResult","currentAmountGods","newAmountGods","add","InventoryPage","assets","setAssets","totalAssetValue","setTotalAssetValue","addTotalAssetValue","ethBalance","setEthBalance","godsBalance","setGodsBalance","assetsResult","grouped","reduce","acc","itm","key","push","balancesResponds","newGods","symbol","balance","newEth","balanceTotal","total","Object","entries","g","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff50c50c.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from \"react\"\r\nimport { useAsyncEffect } from \"../Utils\"\r\n\r\nexport async function fetchCoinPrice (coinID:string)\r\n{\r\n  return fetch(\"https://api.coingecko.com/api/v3/simple/price?ids=\"+coinID+\"&vs_currencies=usd\")\r\n    .then(x => x.json())\r\n    .then(x => x[coinID].usd)\r\n}\r\n\r\nexport async function fetchEthPrice ()\r\n{\r\n    return fetchCoinPrice(\"ethereum\")\r\n}\r\n\r\nexport async function fetchGodsPrice ()\r\n{\r\n    return fetchCoinPrice(\"gods-unchained\")\r\n}","import {useEffect} from 'react'\r\n\r\nexport function round(n:number, d:number)\r\n{\r\n    if(n === 0)\r\n        return 0\r\n    const x = Math.pow(10,d)\r\n    return Math.round((n + Number.EPSILON) * x) / x\r\n}\r\n\r\nexport function getCurrencyNameFromAddress(addr:string)\r\n{\r\n    return addr === \"0xccc8cb5229b0ac8069c51fd58367fd1e622afd97\" ? \"gods\" : \"eth\"\r\n}\r\n\r\nexport function useAsyncEffect<T>(fn:() => Promise<T>, arr?:any[])\r\n{\r\n    return useEffect(() =>\r\n    {\r\n        (async () =>\r\n        {\r\n            fn()\r\n        })()\r\n    }, arr)\r\n}\r\n\r\nexport function sleep(ms:number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function undercutEth(eth:number)\r\n{\r\n    return round(eth-0.0000001, 8)\r\n}\r\n\r\nexport function undercutGods(gods:number)\r\n{\r\n    return round(gods-0.00001, 6)\r\n}\r\n\r\nexport function undercut(currency:string, amount:number)\r\n{\r\n    return currency == \"gods\" ? undercutGods(amount) : undercutEth(amount)\r\n}","import exp from 'constants'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport * as gecko from '../Api/gecko'\r\nimport { useAsyncEffect } from '../Utils'\r\n\r\nconst SetAddressContext = React.createContext((x:string) => { })\r\nconst AddressContext = React.createContext(\"\")\r\nconst GeckoContext = React.createContext({ ethPrice:0, godsPrice:0 })\r\n\r\nexport function useEthPrice() { return useContext(GeckoContext).ethPrice }\r\nexport function useGodsPrice() { return useContext(GeckoContext).godsPrice }\r\nexport function useSetAddress() { return useContext(SetAddressContext) }\r\nexport function useAddress() { return useContext(AddressContext) }\r\nexport function useTokenPrice() { return useContext(GeckoContext) }\r\n\r\nexport function GlobalContextProvider({ children }:{ children:JSX.Element })\r\n{\r\n    const [ethPrice, setEthPrice] = useState(0)\r\n    const [godsPrice, setGodsPrice] = useState(0)\r\n    const [ addr, setAddr ] = useState(\"\")\r\n\r\n    useAsyncEffect(async () => {\r\n        setEthPrice(await gecko.fetchEthPrice())\r\n        setGodsPrice(await gecko.fetchGodsPrice())\r\n    })\r\n\r\n    return (\r\n        <AddressContext.Provider value={addr}>\r\n        <SetAddressContext.Provider value={setAddr}>\r\n        <GeckoContext.Provider value={{ethPrice:ethPrice,godsPrice:godsPrice}}>\r\n            {children}\r\n        </GeckoContext.Provider>\r\n        </SetAddressContext.Provider>\r\n        </AddressContext.Provider>\r\n    )\r\n}","import { useState } from 'react';\r\nimport './Navbar.css'\r\n\r\ntype NavbarItem =\r\n{\r\n    label:string\r\n    page:JSX.Element\r\n}\r\n\r\ntype Props =\r\n{\r\n    items:NavbarItem[]\r\n}\r\n\r\nexport default function Navbar(props:Props)\r\n{\r\n    var [currentPage, setCurrentPage] = useState(-1)\r\n    console.log(\"current page \" + currentPage)\r\n    return (\r\n        <div>\r\n            <nav className='nav-bar-items'>\r\n                <ul className='nav-menu'>\r\n                    {props.items.map((item,i) => (<li  key={i}><button onClick={x => setCurrentPage(i)} className='nav-bar-item'>{item.label}</button></li>))}\r\n                </ul>\r\n            </nav>\r\n            <div>\r\n                {currentPage === -1 ? (<></>) : props.items[currentPage].page}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { useMetaMask } from \"metamask-react\";\r\nimport { useSetAddress } from '../Context/GlobalContextProvider';\r\n\r\nexport default function ButtonMetaMask()\r\n{\r\n  const { status, connect, account } = useMetaMask();\r\n  const setAddress = useSetAddress()\r\n\r\n  useEffect(() => \r\n  {\r\n    if(status === \"connected\")\r\n      setAddress(account || \"\")\r\n  }, [status])\r\n\r\n  let label = null\r\n  if (status === \"initializing\")\r\n    label = <div>Synchronisation with MetaMask ongoing...</div>\r\n  if (status === \"unavailable\")\r\n    label = <div>MetaMask not available :(</div>\r\n  if (status === \"connecting\")\r\n    label = <div>Connecting...</div>\r\n  if (status === \"connected\")\r\n    return null\r\n  if (status === \"notConnected\")\r\n    label = <button onClick={connect}>Connect to MetaMask</button>\r\n\r\n  return (<a className='meta-mask-button'>{label}</a>)\r\n}","import React, { useContext, useState } from 'react'\r\n\r\nconst TotalAssetValueContext = React.createContext(0)\r\nconst TotalAssetValueAddContext = React.createContext((n:number) => {})\r\n\r\nexport function useTotalAssetValue() { return useContext(TotalAssetValueContext) }\r\nexport function useTotalAssetValueAdd() { return useContext(TotalAssetValueAddContext) }\r\n\r\nexport function TotalAssetValueProvider({ children }:{ children:JSX.Element })\r\n{\r\n    const [totalValue, totalValueSet] = useState(0)\r\n    function addValue(v:number) {\r\n        totalValueSet(old => old+v)\r\n    }\r\n\r\n    return (\r\n        <TotalAssetValueContext.Provider value={totalValue}>\r\n            <TotalAssetValueAddContext.Provider value={addValue}>\r\n                {children}\r\n            </TotalAssetValueAddContext.Provider>\r\n        </TotalAssetValueContext.Provider>\r\n    )\r\n}","import {sleep,useAsyncEffect} from '../Utils'\r\nimport {useCallback, useEffect, useState} from 'react'\r\nimport exp from 'constants'\r\n\r\nexport async function fetchBalances (addr:string)\r\n{\r\n  const res = await fetch(\"https://api.x.immutable.com/v2/balances/\"+addr)\r\n  const json = await res.json()\r\n  return json\r\n}\r\n\r\nexport async function fetchAssetDetails(tokenAddress:string, tokenID:string)\r\n{\r\n  return fetch(\"https://api.x.immutable.com/v1/assets/\" + tokenAddress + \"/\" + tokenID)\r\n    .then(x => x.json())\r\n}\r\n\r\nexport async function fetchAssets(addr:string)\r\n{\r\n  return fetch(\"https://api.x.immutable.com/v1/assets?direction=asc&order_by=name&page_size=2000&sell_orders=true&status=imx&user=\"+addr)\r\n    .then(x => x.json())\r\n}\r\n\r\nexport async function fetchAssetsByName(addr:string, name:string)\r\n{\r\n  return fetch(\"https://api.x.immutable.com/v1/assets?name=\" + name + \"&direction=asc&order_by=name&page_size=2000&sell_orders=true&status=imx&user=\"+addr)\r\n    .then(x => x.json())\r\n}\r\n\r\nexport async function fetchOrdersEth(id:string)\r\n{\r\n  return fetch(\"https://api.x.immutable.com/v1/orders?buy_token_type=ETH&direction=asc&include_fees=true&order_by=buy_quantity&page_size=10&sell_token_address=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c&status=active\")\r\n    .then(x => x.json())\r\n}\r\n\r\nexport async function fetchOrdersByNameEth(name:string, quality:string)\r\n{\r\n  const data = encodeURIComponent(\"{\\\"name\\\":[\\\"\"+name+\"\\\"],\\\"quality\\\":[\\\"\"+quality+\"\\\"]}\")\r\n  const res = await fetch(\"https://api.x.immutable.com/v1/orders?page_size=5&sell_token_address=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c&buy_token_type=ETH&direction=asc&include_fees=true&order_by=buy_quantity&status=active&sell_metadata=\"+data)\r\n  return res.json()\r\n}\r\n\r\nexport async function fetchOrdersByNameGods(name:string, quality:string)\r\n{\r\n  const data = encodeURIComponent(\"{\\\"name\\\":[\\\"\"+name+\"\\\"],\\\"quality\\\":[\\\"\"+quality+\"\\\"]}\")\r\n  const res = await fetch(\"https://api.x.immutable.com/v1/orders?page_size=5&sell_token_address=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c&buy_token_address=0xccc8cb5229b0ac8069c51fd58367fd1e622afd97&direction=asc&include_fees=true&order_by=buy_quantity&status=active&sell_metadata=\"+data)\r\n  return res.json()\r\n}\r\n\r\nexport async function fetchOrdersByName(currency:string, name:string, quality:string)\r\n{\r\n  return await (currency == \"gods\" ? fetchOrdersByNameGods(name, quality) : fetchOrdersByNameEth(name, quality))\r\n}\r\n\r\nexport async function getLowestOrderByNameEth(name:string, quality:string)\r\n{\r\n  const json = await fetchOrdersByNameEth(name,quality)\r\n  const buy = json.result[0].buy.data\r\n  return buy\r\n}\r\n\r\nexport async function getPriceByNameGods(name:string, quality:string)\r\n{\r\n  const json = await fetchOrdersByNameGods(name,quality)\r\n  const buy = json.result[0].buy.data\r\n  return buy.quantity / Math.pow(10,buy.decimals)\r\n}\r\n\r\nexport async function getPriceByNameEth(name:string, quality:string)\r\n{\r\n  const json = await fetchOrdersByNameEth(name,quality)\r\n  const buy = json.result[0].buy.data\r\n  return buy.quantity / Math.pow(10,buy.decimals)\r\n}\r\n\r\nexport async function waitOrder(address:string, tokenName:string, orderID:number)\r\n{\r\n  var count = 0\r\n  while(count < 20)\r\n  {\r\n      const newAssets = await fetchAssetsByName(address, tokenName)\r\n      if(newAssets.result.some((no:any) => no.orders?.sell_orders?.some((so:any) => so.order_id == orderID)))\r\n      {\r\n        return true\r\n      }\r\n      count++\r\n      await sleep(1000)\r\n  }\r\n  return false\r\n}\r\n\r\nexport function usePrice(tokenName:string, quality:string)\r\n{\r\n  var [ethQuantity, setEthQuantity] = useState(0)\r\n  var [godsQuantity, setGodsQuantity] = useState(0)\r\n\r\n  useAsyncEffect(async () =>\r\n  {\r\n      const ethRes = await fetchOrdersByNameEth(tokenName, quality)\r\n      if(ethRes.result.length !== 0)\r\n      {\r\n          const ethQuantity = ethRes.result[0].buy.data.quantity/Math.pow(10,18)\r\n          setEthQuantity(ethQuantity)\r\n      }\r\n      const godsRes = await fetchOrdersByNameGods(tokenName, quality)\r\n      if(godsRes.result.length !== 0)\r\n      {\r\n          const godsQuantity = godsRes.result[0].buy.data.quantity/Math.pow(10,18)\r\n          setGodsQuantity(godsQuantity)\r\n      }\r\n  }, [])\r\n\r\n  return [ethQuantity,godsQuantity]\r\n}\r\n\r\nexport function usePriceUsd(tokenName:string)\r\n{\r\n  \r\n  return [0,0]\r\n}","import { Link } from '@imtbl/imx-sdk';\r\n\r\nexport async function sell(token:any, price:number, currencyAddress?:string):Promise<number>\r\n{\r\n    const link = new Link('https://link.x.immutable.com');\r\n    try\r\n    {\r\n        const res = await link.sell({\r\n            amount: price.toString(),\r\n            tokenId: token.token_id,\r\n            tokenAddress: token.token_address,\r\n            currencyAddress: currencyAddress\r\n        })\r\n        console.log(\"sell done\")\r\n        console.log(res)\r\n        const num = (res as unknown) as number\r\n        return num\r\n    }\r\n    catch(ex)\r\n    {\r\n        console.log(\"EXCEPTION\")\r\n        console.log(ex)\r\n        return -1\r\n    }\r\n}\r\n\r\nexport async function sell2(token:any):Promise<number>\r\n{\r\n    const link = new Link('https://link.x.immutable.com');\r\n    try\r\n    {\r\n        const res = await link.sell({\r\n            tokenId: token.token_id,\r\n            tokenAddress: token.token_address,\r\n        })\r\n        console.log(res)\r\n        const num = (res as unknown) as number\r\n        return num\r\n    }\r\n    catch(ex)\r\n    {\r\n        console.log(\"EXCEPTION\")\r\n        console.log(ex)\r\n        return -1\r\n    }\r\n}\r\n\r\nexport async function cancel(token:any):Promise<number>\r\n{\r\n    const link = new Link('https://link.x.immutable.com');\r\n    try\r\n    {\r\n        const res:any = await link.cancel({\r\n            orderId: token.orders.sell_orders[0].order_id\r\n        })\r\n        return res.order_id\r\n    }\r\n    catch(ex)\r\n    {\r\n        console.log(\"EXCEPTION\")\r\n        console.log(ex)\r\n        return -1\r\n    }\r\n}\r\n\r\nexport async function sellEth(token:any, price:number):Promise<number>\r\n{\r\n    return sell(token, price)\r\n}\r\n\r\nexport async function sellGods(token:any, price:number):Promise<number>\r\n{\r\n    return sell(token, price, \"0xccc8cb5229b0ac8069c51fd58367fd1e622afd97\")\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport * as imx from '../Api/Imx'\r\nimport { useAddress } from '../Context/GlobalContextProvider'\r\nimport { getCurrencyNameFromAddress, undercut, undercutEth, undercutGods, useAsyncEffect } from '../Utils'\r\nimport * as link from '../Api/link'\r\n\r\ntype TokenListDisplayProps = {\r\n    children:JSX.Element[]\r\n}\r\nfunction TokenListDisplay(p:TokenListDisplayProps)\r\n{\r\n    return (<div className=\"token-list-container\">{p.children}</div>)\r\n}\r\n\r\ntype ImageDisplayProps = {\r\n    url:string\r\n}\r\nfunction ImageDisplay(props:ImageDisplayProps)\r\n{\r\n    return (<div className='token-list-card'>\r\n        <img className='token-list-image' src={props.url}/>\r\n    </div>)\r\n}\r\n\r\ntype OrderDisplayProps = {\r\n    token:any\r\n}\r\nfunction OrderDisplay(p:OrderDisplayProps)\r\n{\r\n    const sellOrder = p.token.orders.sell_orders[0]\r\n    var [amount, setAmount] = useState(sellOrder.buy_quantity / Math.pow(10,sellOrder.buy_decimals))\r\n    const currency = getCurrencyNameFromAddress(sellOrder.contract_address)\r\n    const address = useAddress()\r\n\r\n    var [price, setPrice] = useState(0)\r\n    var [selling, setSelling] = useState(false)\r\n    var [displaying, setDisplaying] = useState(true)\r\n\r\n    async function cancel()\r\n    {\r\n        setSelling(true)\r\n        const orderID = await link.cancel(p.token)\r\n        if(orderID>0)\r\n            setDisplaying(false)\r\n        setSelling(false)   \r\n    }\r\n\r\n    async function sell()\r\n    {\r\n        setSelling(true)\r\n        await link.sell2(p.token)\r\n        setSelling(false)\r\n    }\r\n\r\n    async function relist()\r\n    {\r\n        console.log(p.token)\r\n        setSelling(true)\r\n        \r\n        const orders = await imx.fetchOrdersByName(currency, p.token.name, p.token.metadata.quality)\r\n        const order = orders.result[0]\r\n        const currentAmount = order.buy.data.quantity / Math.pow(10,order.buy.data.decimals)\r\n        const undercutPrice = order.user === address ? currentAmount : undercut(currency, currentAmount)\r\n        currency === \"gods\" ? (await link.sellGods(p.token, undercutPrice)) : (await link.sellEth(p.token, undercutPrice))\r\n        \r\n        setAmount(undercutPrice)\r\n        setSelling(false)\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        (async () =>\r\n        {\r\n            const newPrice = currency === \"gods\" ? await imx.getPriceByNameGods(p.token.name, p.token.metadata.quality) : await imx.getPriceByNameEth(p.token.name, p.token.metadata.quality)\r\n            setPrice(newPrice)\r\n        })()\r\n    }, [amount])\r\n\r\n    return displaying ? (<div>\r\n        <ImageDisplay url={p.token.metadata.image}/>\r\n        <div>current: {amount} {currency}</div>\r\n        <div>lowest : {price} {currency}</div>\r\n        { selling === false && price != 0 && amount > price ? <button onClick={relist}>relist</button> : null }\r\n        { selling === false ? <button onClick={sell}>sell</button> : null }\r\n        { selling === false ? <button onClick={cancel}>cancel</button> : null }\r\n    </div>) : null\r\n}\r\n\r\nexport default function OrdersPage()\r\n{\r\n    var [ orders, setOrders ] = useState<any[]>([])\r\n    var address = useAddress()\r\n\r\n    useEffect(() => {(async () =>\r\n    {\r\n        console.log(\"fetching assets from \" + address)\r\n        const responds = await imx.fetchAssets(address)\r\n        const assetsWithSellOrders = responds.result.filter((a:any) => a.orders.sell_orders?.length > 0)\r\n        console.log(assetsWithSellOrders)\r\n        setOrders(assetsWithSellOrders)\r\n    })()}, [address])\r\n\r\n    return(\r\n        <div>\r\n            <TokenListDisplay>\r\n                { orders.map((t,i) =>\r\n                    <div key={i}>\r\n                        <OrderDisplay token={t}/>\r\n                    </div>\r\n                )}\r\n            </TokenListDisplay>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport * as imx from '../Api/Imx'\r\nimport { useAsyncEffect } from '../Utils'\r\nimport * as link from '../Api/link'\r\nimport { useEthPrice, useGodsPrice, useAddress } from '../Context/GlobalContextProvider'\r\nimport {round} from '../Utils'\r\nimport { usePrice } from '../Api/Imx';\r\n\r\ntype ItemDisplayProps =\r\n{\r\n    items:any[],\r\n    add:(n:number) => void\r\n}\r\n\r\nfunction ItemDisplay(p:ItemDisplayProps)\r\n{\r\n    const tokenName = p.items[0].metadata.name\r\n    var [tokens, setTokens] = useState(p.items)\r\n    var [selling, setSelling] = useState(false)\r\n    var [amountEth, setAmountEth] = useState(0)\r\n    var [amountGods, setAmountGods] = useState(0)\r\n    var address = useAddress()\r\n    var [ethQuantity, godsQuantity] = usePrice(tokenName, p.items[0].metadata.quality)\r\n    const priceOfEth = useEthPrice()\r\n    const priceOfGods = useGodsPrice()\r\n\r\n    useEffect(() =>\r\n    {\r\n        p.add(priceOfEth*ethQuantity*p.items.length)\r\n    }, [ethQuantity]);\r\n\r\n    async function sellEth()\r\n    {\r\n        const token = tokens.find((t:any) => t.orders.sell_orders === undefined)\r\n\r\n        const orders = await imx.fetchOrdersByNameEth(tokenName, p.items[0].metadata.quality)\r\n        const order = orders.result[0]\r\n\r\n        const currentAmountEth = order.buy.data.quantity / Math.pow(10,order.buy.data.decimals)\r\n        const newAmountEth = order.user === address ? currentAmountEth : round(currentAmountEth-0.0000001, 8)\r\n        \r\n        setSelling(true)\r\n        var sellOrderID = await link.sellEth(token, newAmountEth)\r\n        if(sellOrderID === -1)\r\n        {\r\n            setSelling(false)\r\n            return;\r\n        }\r\n        \r\n        const waitResult = await imx.waitOrder(address, tokenName, sellOrderID)\r\n        setSelling(false)\r\n        if(!waitResult)\r\n            return\r\n\r\n        setTokens((await imx.fetchAssetsByName(address, tokenName)).result)\r\n        setAmountEth(newAmountEth)\r\n    }\r\n\r\n    async function sellGods()\r\n    {\r\n        const token = tokens.find((t:any) => t.orders.sell_orders === undefined)\r\n        const orders = await imx.fetchOrdersByNameGods(tokenName, p.items[0].metadata.quality)\r\n        const order = orders.result[0]\r\n\r\n        const currentAmountGods = order.buy.data.quantity / Math.pow(10,order.buy.data.decimals)\r\n\r\n        const newAmountGods = order.user === address ? currentAmountGods : round(currentAmountGods-0.00001, 6)\r\n        \r\n        setSelling(true)\r\n        var sellOrderID = await link.sellGods(token, newAmountGods)\r\n        if(sellOrderID === -1)\r\n        {\r\n            setSelling(false)\r\n            return;\r\n        }\r\n        \r\n        const waitResult = await imx.waitOrder(address, tokenName, sellOrderID)\r\n        setSelling(false)\r\n        if(!waitResult)\r\n            return\r\n        \r\n        setTokens((await imx.fetchAssetsByName(address, tokenName)).result)\r\n        setAmountGods(newAmountGods)\r\n    }\r\n\r\n    return (<div className='token-list-card'>\r\n        <img className='token-list-image' src={p.items[0].metadata.image}/>\r\n        <div>{tokenName} (x{p.items.length})</div>\r\n        <div>\r\n            <a>eth: {round(ethQuantity * priceOfEth,2)}$</a>\r\n            { ethQuantity != 0 && tokens.some((t:any) => t.orders.sell_orders === undefined) && !selling ? <button onClick={sellEth}>sell</button> : <div></div>}\r\n        </div>\r\n        <div>\r\n            <a>gods: {round(godsQuantity * priceOfGods,2)}$</a>\r\n            { godsQuantity != 0 && tokens.some((t:any) => t.orders.sell_orders === undefined) && !selling ? <button onClick={sellGods}>sell</button> : <div></div>}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default function InventoryPage()\r\n{\r\n    const [assets, setAssets] = useState<any[]>([])\r\n    const [totalAssetValue, setTotalAssetValue] = useState(0)\r\n    const addTotalAssetValue = (n:number) => setTotalAssetValue(old => old+n)\r\n    var [ethBalance, setEthBalance] = useState(0)\r\n    var [godsBalance, setGodsBalance] = useState(0)\r\n    var address = useAddress()\r\n    var ethPrice = useEthPrice()\r\n    var godsPrice = useGodsPrice()\r\n\r\n    useAsyncEffect(async () =>\r\n    {\r\n        const assetsResult = await imx.fetchAssets(address)\r\n        console.log(assetsResult)\r\n        setAssets(assetsResult.result)\r\n    }, [])\r\n\r\n    const grouped = assets.reduce((acc, itm) => {\r\n        const key = itm.metadata.name + itm.metadata.quality\r\n        if(!acc[key])\r\n          acc[key] = []\r\n        acc[key].push(itm);\r\n        return acc;\r\n    }, {});\r\n\r\n    useEffect(() =>{(async () => {\r\n        if(address == \"\")return\r\n        const responds = await imx.fetchAssets(address)\r\n        setAssets(responds.result)\r\n    })()}, [address])\r\n\r\n    useEffect(() =>{(async () => {\r\n        if(address == \"\")return\r\n        const balancesResponds = await imx.fetchBalances(address);\r\n        const newGods = balancesResponds.result.find((x:any) => x.symbol === \"GODS\")?.balance / Math.pow(10,18)\r\n        const newEth = balancesResponds.result.find((x:any) => x.symbol === \"ETH\")?.balance / Math.pow(10,18)\r\n        \r\n        setEthBalance(newEth || 0)\r\n        setGodsBalance(newGods || 0)\r\n    })()}, [address, setAssets])\r\n\r\n    const balanceTotal = godsBalance*godsPrice + ethBalance*ethPrice\r\n    const total = totalAssetValue + balanceTotal\r\n    \r\n    return (<div>\r\n        <div>coingecko eth price: {ethPrice}$</div>\r\n        <div>coingecko gods price: {godsPrice}$</div>\r\n        <div>_____</div>\r\n        <div>GODS: {round(godsBalance*godsPrice,2)}$ ({round(godsBalance,2)})</div>\r\n        <div>ETH: {round(ethBalance*ethPrice,2)}$ ({round(ethBalance,4)})</div>\r\n        <div>TOTAL: {round(balanceTotal,2)}$</div>\r\n        <div>_____</div>\r\n        <div>TOTAL: {round(total,2)}$</div>\r\n        <div className=\"token-list-container\">\r\n            {Object.entries(grouped).map((g:any,i) => <div key={i}><ItemDisplay items={g[1]} add={addTotalAssetValue}/></div>)}\r\n        </div>\r\n    </div>)\r\n}","import './App.css';\nimport { GlobalContextProvider } from './Context/GlobalContextProvider'\nimport Navbar from './Components/Navbar/Navbar';\nimport ButtonMetaMask from './Components/MetaMaskButton'\nimport { TotalAssetValueProvider } from './Context/TotalAssetValueContext'\nimport OrdersPage from './Pages/OrdersPage';\nimport TokenSummaryPage from './Pages/TokenSummaryPage';\nimport InventoryPage from './Pages/InventoryPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalContextProvider>\n        <>\n          <ButtonMetaMask/>\n          <Navbar items=\n            {[\n              {label: \"Inventory\", page: (<TotalAssetValueProvider><InventoryPage/></TotalAssetValueProvider>)},\n              {label: \"Orders\", page: (<OrdersPage></OrdersPage>)},\n              {label: \"GUDecks\", page: <></>}\n            ]}/>\n        </>\n      </GlobalContextProvider>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MetaMaskProvider } from \"metamask-react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MetaMaskProvider>\n      <App />\n    </MetaMaskProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}